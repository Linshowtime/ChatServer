<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nt.mapper.ChatMessageMapper">
  <resultMap id="BaseResultMap" type="com.nt.entity.ChatMessage">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="sender_id" jdbcType="INTEGER" property="senderId" />
    <result column="receiver_id" jdbcType="INTEGER" property="receiverId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="is_read" jdbcType="INTEGER" property="isRead" />
  </resultMap>
  <sql id="Base_Column_List">
    id, sender_id, receiver_id, time, content,is_read
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_message
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectMessages" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_message
    where (sender_id = #{senderId} and receiver_id=#{receiverId}) or (sender_id = #{receiverId} and receiver_id=#{senderId})
   </select>
   <select id="selectUnreadMessages" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_message
    where  (sender_id = #{receiverId} and receiver_id=#{senderId})and is_read=0
   </select>
   <select id="selectMessagesLikeContent" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from chat_message
    where (sender_id = #{senderId} and receiver_id=#{receiverId}) or (sender_id = #{receiverId} and receiver_id=#{senderId})
    and content like CONCAT(CONCAT('%',#{content},'%'))
   </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from chat_message
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.nt.entity.ChatMessage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_message (sender_id, receiver_id, time, 
      content,is_read)
    values (#{senderId,jdbcType=INTEGER}, #{receiverId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{content,jdbcType=VARCHAR}, #{isRead,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.nt.entity.ChatMessage">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into chat_message
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="senderId != null">
        sender_id,
      </if>
      <if test="receiverId != null">
        receiver_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="isRead != null">
        is_read,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="senderId != null">
        #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
       <if test="isRead != null">
        #{isRead,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.nt.entity.ChatMessage">
    update chat_message
    <set>
      <if test="senderId != null">
        sender_id = #{senderId,jdbcType=INTEGER},
      </if>
      <if test="receiverId != null">
        receiver_id = #{receiverId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="isRead != null">
       is_read = #{isRead,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.nt.entity.ChatMessage">
    update chat_message
    set sender_id = #{senderId,jdbcType=INTEGER},
      receiver_id = #{receiverId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      content = #{content,jdbcType=VARCHAR},
      is_read=#{isRead,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>